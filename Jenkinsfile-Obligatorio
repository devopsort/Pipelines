pipeline {
    agent any
    stages {
        stage("Init") {
            steps {
                script {
                    PROFILE_NAME = "[default]"     
                    PROFILE_AWS_ACCES_KEY = "qwewqeqe"
                    PROFILE_AWS_KEY_ID = "qweqweqweqwe"
                    PROFILE_AWS_SECRET = "qweqeqweqweqwe"
                    load ("/tmp/variables.var")
                    comandossh = "ssh -i /tmp/Ec2-ssh-key.pem -oStrictHostKeyChecking=no ec2-user@3.238.49.203 sudo "
                    //comandossh = "ssh -i /tmp/Ec2-ssh-key.pem ec2-user@JenkinsDockerTF sudo "
                    argocd_product_repo = "https://github.com/devopsort/argocd_products-service-example.git"
                    argocd_orders_repo = "https://github.com/devopsort/argocd_orders-service-example.git"
                    argocd_shipping_repo = "https://github.com/devopsort/argocd_shipping-service-example.git"
                    argocd_payments_repo = "https://github.com/devopsort/argocd_payments-service-example.git"
                    if("${GIT_BRANCH}" == "origin/Dev") {
                        branchName = "Dev"
                        IMAGEN_TAG = "dev"
                        version = "${BUILD_NUMBER}"
                    } 
                    if("${GIT_BRANCH}" == "origin/Test") { 
                       branchName = "Test"
                       IMAGEN_TAG = "test"
                       version = "${BUILD_NUMBER}"
                    } 
                    if("${GIT_BRANCH}" == "origin/Prod") { 
                       branchName = "Prod"
                       IMAGEN_TAG = "prod"
                       version = "${BUILD_NUMBER}"
                    }
                    if("${GIT_URL}" == "https://github.com/devopsort/orders-service-example.git") { 
                       ms_jar = "orders-service-example.jar"
                       ms_name = "Orders"
                       ECR_NAME = "orders-service"
                       argocd_git = "argocd_orders-service-example"
                       registry = ""
                       login_registry = ""
                    }
                    if("${GIT_URL}" == "https://github.com/devopsort/products-service-example.git") { 
                       ms_jar = "products-service-example.jar"
                       ms_name = "Products"
                       ECR_NAME = "products-service"
                       argocd_git = "argocd_products-service-example"
                       registry = "407689691491.dkr.ecr.us-east-1.amazonaws.com"
                       login_registry = "aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 407689691491.dkr.ecr.us-east-1.amazonaws.com"
                    }
                    if("${GIT_URL}" == "https://github.com/devopsort/shipping-service-example.git") { 
                       ms_jar = "shipping-service-example.jar"
                       ms_name = "Shipping"
                       ECR_NAME = "shipping-service"
                       argocd_git = "argocd_shipping-service-example"
                       registry = ""
                       login_registry = ""
                    }
                    if("${GIT_URL}" == "https://github.com/devopsort/payments-service-example.git") { 
                       ms_jar = "payments-service-example.jar"
                       ms_name = "Payments"
                       ECR_NAME = "payments-service"
                       argocd_git = "argocd_payments-service-example"
                       registry = ""
                       login_registry = ""
                    }
                    /*
                    sh "${comandossh} rm -rf  /home/ec2-user/.aws/"
                    sh "${comandossh} mkdir -p /home/ec2-user/.aws/"
                    sh "${comandossh} touch /home/ec2-user/credentials"
                    sh "${comandossh} 'echo ${PROFILE_NAME} >> /home/ec2-user/credentials'"
                    sh "${comandossh} 'echo ${PROFILE_AWS_ACCES_KEY} >> /home/ec2-user/credentials'"
                    sh "${comandossh} 'echo ${PROFILE_AWS_KEY_ID} >> /home/ec2-user/credentials'"
                    sh "${comandossh} 'echo ${PROFILE_AWS_SECRET} >> /home/ec2-user/credentials'"
                    sh "${comandossh} mv /home/ec2-user/credentials /home/ec2-user/.aws/"
                    */
                    
                    //gitCredentials = "obligatorio-git"
                    repoUrl = "${GIT_URL}"
                    Ec2_WORKSPACE = "/home/jenkins_home/workspace"
                    clonerepo = "${Ec2_WORKSPACE}/${ms_name}"
                    //Ec2_WORKSPACE = "/home/lib/docker/volumes/jenkins_home/_data/workspace/Obligatorio/products"
                }
            }
        }

        stage('CloneRepo') {
            steps {
                script {
                    file = fileExists "/var/jenkins_home/workspace/${ms_name}"
                    if("${file}" == "true") {
                        sh "${comandossh} rm -rf ${clonerepo}" 
                    }
                    echo 'Pulling...' + branchName
                    sh "${comandossh} mkdir ${clonerepo}"
                    sh "${comandossh} git clone -b ${branchName} ${repoUrl} ${clonerepo}"
                }
            }
        }

        stage("Build") {
            steps {
                script {
                    if("${ms_name}" == "Orders" && "${branchName}" == "Dev") {
                        
                        echo "Building the docker Microservicio Orders Dev"
                        sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"
                        
                    } 
                    if("${ms_name}" == "Orders" && "${branchName}" == "Test") { 
                        
                        echo "Building the docker Microservicio Orders Test"
                        sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"

                    } 
                    if("${ms_name}" == "Orders" && "${branchName}" == "Prod") { 
                        
                        echo "Building the docker Microservicio Orders Prod"
                        sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"

                    } 
                    if("${ms_name}" == "Products" && "${branchName}" == "Dev") {
                        
                        echo "Building the docker Microservicio Products Dev"
                        sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"

                    } 
                    if("${ms_name}" == "Products" && "${branchName}" == "Test") { 
                        
                        echo "Building the docker Microservicio Products Test"
                        sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"

                    }
                    if("${ms_name}" == "Products" && "${branchName}" == "Prod") {
                        
                        echo "Building the docker Microservicio Products Prod"
                        sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"

                    }
                    if("${ms_name}" == "Shipping" && "${branchName}" == "Dev") {
                        
                        echo "Building the docker Microservicio Shipping Dev"
                        sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"

                    }
                    if("${ms_name}" == "Shipping" && "${branchName}" == "Test") {
                        
                        echo "Building the docker Microservicio Shipping Test"
                        sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"

                    }
                    if("${ms_name}" == "Shipping" && "${branchName}" == "Prod") {
                        
                        echo "Building the docker Microservicio Shipping Prod"
                        sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"

                    }
                    if("${ms_name}" == "Payments" && "${branchName}" == "Dev") {
                        
                        echo "Building the docker Microservicio Payments Dev"
                        sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"

                    }
                    if("${ms_name}" == "Payments" && "${branchName}" == "Test") {
                        
                        echo "Building the docker Microservicio Payments Test"
                        sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"

                    }
                    if("${ms_name}" == "Payments" && "${branchName}" == "Prod") {
                        
                        echo "Building the docker Microservicio Payments Prod"
                       sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"
                    }
                }
            }
        }

        stage("Deploy Microservicio") {
            steps {
                script {
                    if("${ms_name}" == "Orders" && "${branchName}" == "Dev") {
                        
                        
                        
                    } 
                    if("${ms_name}" == "Orders" && "${branchName}" == "Test") { 
                        
                        

                    } 
                    if("${ms_name}" == "Orders" && "${branchName}" == "Prod") { 
                        
                        

                    } 
                    if("${ms_name}" == "Products" && "${branchName}" == "Dev") {
                        
                        

                    } 
                    if("${ms_name}" == "Products" && "${branchName}" == "Test") { 
                        
                        echo 'Pulling Repo ArgoCD...' + branchName
                        file_ARGOCD = fileExists "/var/jenkins_home/workspace/${ms_name}"
                        if("${file_ARGOCD}" == "true") {
                            sh "${comandossh} rm -rf ${clonerepo}" 
                        }

                        //sh "${comandossh} git clone -b ${branchName} ${argocd_product_repo} ${clonerepo}"

                        //echo 'Remplazando variables en el yml...'

                        //sh "${comandossh} cp -rf ${clonerepo}/deployment.yml_ORIGINAL ${clonerepo}/deployment.yml"
                        //sh "sed -i 's~"${container_images}"~"${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}"~g' ${clonerepo}/deployment.yml"

                        echo 'Subiendo cambios del yml...'

                        stage('Git Push'){
                                script{
                                    withCredentials([usernamePassword(credentialsId: 'obligatorio-git', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                                            sh "${comandossh} git clone -b ${branchName} ${argocd_product_repo} ${clonerepo}"
                                            
                                            echo 'Remplazando variables en el yml...'

                                            sh "${comandossh} cp -rf ${clonerepo}/deployment.yml_ORIGINAL ${clonerepo}/deployment.yml"
                                            sh "${comandossh} git add ."
                                            sh "git commit -m \"Instalar version ${BUILD_NUMBER}\""
                                            sh "git push https://${USER}:${PASS}@${argocd_product_repo} ${branchName}"
                                } 
                            }
                        }


                        //stage('Git Push'){
                        //        script{
                        //            GIT_CREDS = credentials('obligatorio-git')
                       //                 sh "${comandossh} cd ${clonerepo}/; git add ."
                       //                 sh "${comandossh} cd ${clonerepo}/; git commit -m \"Instalar version ${BUILD_NUMBER}\""
                       //                 sh "${comandossh} cd ${clonerepo}/; git push https://${GIT_CREDS_USR}:${GIT_CREDS_PSW}@${GIT_URL} ${branchName}"
                       //                
                       //     }
                       // }


                        //sh "${comandossh} cd ${clonerepo}/; git config --global user.email \"admin@admin.com\"" 
                        //sh "${comandossh} cd ${clonerepo}/; git config --global user.name \"devopsort\""
                        //sh "${comandossh} cd ${clonerepo}/; git add ."
                        //sh "${comandossh} cd ${clonerepo}/; git commit -m \"Instalar version ${BUILD_NUMBER}\""
                        //sh "${comandossh} cd ${clonerepo}/; echo \"${gitCredentials}\" | git push"
                        //sh "${comandossh} cd ${clonerepo}/; sh /home/jenkins_home/workspace/Script/git.sh"

                    }
                    if("${ms_name}" == "Products" && "${branchName}" == "Prod") {
                        
                        

                    }
                    if("${ms_name}" == "Shipping" && "${branchName}" == "Dev") {
                        
                        

                    }
                    if("${ms_name}" == "Shipping" && "${branchName}" == "Test") {
                        
                        

                    }
                    if("${ms_name}" == "Shipping" && "${branchName}" == "Prod") {
                        
                        

                    }
                    if("${ms_name}" == "Payments" && "${branchName}" == "Dev") {
                        
                        

                    }
                    if("${ms_name}" == "Payments" && "${branchName}" == "Test") {
                        
                        

                    }
                    if("${ms_name}" == "Payments" && "${branchName}" == "Prod") {
                        
                       
                    }

                }
            }
        }
    }
}