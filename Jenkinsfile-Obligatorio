pipeline {
    agent any
    stages {
        stage("Init") {
            steps {
                script {
                    load ("/tmp/variables.var")
                    comandossh = "ssh ec2-user@172.31.25.112 sudo "
                    if("${GIT_BRANCH}" == "origin/Dev") {
                        branchName = "Dev"
                        IMAGEN_TAG = "dev"
                    } 
                    if("${GIT_BRANCH}" == "origin/Test") { 
                       branchName = "Test"
                       IMAGEN_TAG = "test"
                    } 
                    if("${GIT_BRANCH}" == "origin/Prod") { 
                       branchName = "Prod"
                       IMAGEN_TAG = "prod"
                    }
                    if("${GIT_URL}" == "https://github.com/devopsort/orders-service-example.git") { 
                       ms-jar = "orders-service-example.jar"
                       ms_orders = "Orders"
                    }
                    if("${GIT_URL}" == "https://github.com/devopsort/products-service-example.git") { 
                       ms-jar = "products-service-example.jar"
                       ms_products = "Products"
                    }
                    if("${GIT_URL}" == "https://github.com/devopsort/shipping-service-example.git") { 
                       ms-jar = "shipping-service-example.jar"
                       ms_shipping = "Shipping"
                    }
                    if("${GIT_URL}" == "https://github.com/devopsort/payments-service-example.git") { 
                       ms-jar = "payments-service-example.jar"
                       ms_payments = "Payments"
                    }

                    
                    gitCredentials = "products-git"
                    repoUrl = "${GIT_URL}"
                    clonerepo = "${WORKSPACE}/products"
                    Ec2_WORKSPACE = "/var/lib/docker/volumes/jenkins_home/_data/workspace/Obligatorio/products"
                    //clonerepo = "/var/jenkins_home/workspace/products-service-example/products"
                    //test = load load ("/var/jenkins_home/workspace/products-service-example_Test/products-service-example/script.groovy")
                }
            }
        }

        stage('CloneRepo') {
            steps {
                echo 'Pulling...' + branchName
                sh "rm -rf ${clonerepo}"
                sh "git clone -b ${branchName} ${repoUrl} ${clonerepo}"
                //git branch: "${branchName}", credentialsId: "${gitCredentials}", url: "${repoUrl}"
            
            }
        }

        stage("Build") {
            steps {
                
                if("${ms_orders}" == "Orders" && "${branchName}" == "Dev") { 
                       
                    echo "Building the docker Microservicio Orders Dev"
                    //sh "${comandossh} 'cd ${Ec2_WORKSPACE}; sudo docker build --build-arg JAR_FILE=products-service-example.jar -t 127.0.0.1:5000/products-service:${branchName} .'"
                    sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms-jar} -t 127.0.0.1:5000/orders-service:${branchName} ${Ec2_WORKSPACE}'"

                } else if("${ms_orders}" == "Orders" && "${branchName}" == "Test") { 
                       
                    echo "Building the docker Microservicio Orders Test"
                    sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms-jar} -t 127.0.0.1:5000/orders-service:${branchName} ${Ec2_WORKSPACE}'"

                } else if("${ms_orders}" == "Orders" && "${branchName}" == "Prod") { 
                       
                    echo "Building the docker Microservicio Orders Prod"
                    sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms-jar} -t 127.0.0.1:5000/orders-service:${branchName} ${Ec2_WORKSPACE}'"

                } else if("${ms_products}" == "Products" && "${branchName}" == "Dev") { 
                       
                    echo "Building the docker Microservicio Products Dev"
                    sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms-jar} -t 127.0.0.1:5000/products-service:${branchName} ${Ec2_WORKSPACE}'"

                } else if("${ms_products}" == "Products" && "${branchName}" == "Test") { 
                       
                    echo "Building the docker Microservicio Products Test"
                    sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 407689691491.dkr.ecr.us-east-1.amazonaws.com"
                    sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms-jar} -t 407689691491.dkr.ecr.us-east-1.amazonaws.com/products-service:${branchName} ${Ec2_WORKSPACE}'"
                    
                    sh "docker tag 127.0.0.1:5000/products-service 407689691491.dkr.ecr.us-east-1.amazonaws.com/${ms_products}:${IMAGEN_TAG}"
                    echo "Building completed ....."
                    echo "Pushing the docker images ...."

                    sh "docker push 407689691491.dkr.ecr.us-east-1.amazonaws.com/${ms_products}:${IMAGEN_TAG}"

                } else if("${ms_products}" == "Products" && "${branchName}" == "Prod") { 
                       
                    echo "Building the docker Microservicio Products Prod"
                    sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms-jar} -t 127.0.0.1:5000/products-service:${branchName} ${Ec2_WORKSPACE}'"

                } else if("${ms_shipping}" == "Shipping" && "${branchName}" == "Dev") { 
                       
                    echo "Building the docker Microservicio Shipping Dev"
                    sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms-jar} -t 127.0.0.1:5000/shipping-service:${branchName} ${Ec2_WORKSPACE}'"

                } else if("${ms_shipping}" == "Shipping" && "${branchName}" == "Test") { 
                       
                    echo "Building the docker Microservicio Shipping Test"
                    sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms-jar} -t 127.0.0.1:5000/shipping-service:${branchName} ${Ec2_WORKSPACE}'"

                } else if("${ms_shipping}" == "Shipping" && "${branchName}" == "Prod") { 
                       
                    echo "Building the docker Microservicio Shipping Prod"
                    sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms-jar} -t 127.0.0.1:5000/shipping-service:${branchName} ${Ec2_WORKSPACE}'"

                } else if("${ms_payments}" == "Payments" && "${branchName}" == "Dev") { 
                       
                    echo "Building the docker Microservicio Payments Dev"
                    sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms-jar} -t 127.0.0.1:5000/payments-service:${branchName} ${Ec2_WORKSPACE}'"

                } else if("${ms_payments}" == "Payments" && "${branchName}" == "Test") { 
                       
                    echo "Building the docker Microservicio Payments Test"
                    sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms-jar} -t 127.0.0.1:5000/payments-service:${branchName} ${Ec2_WORKSPACE}'"

                } else if("${ms_payments}" == "Payments" && "${branchName}" == "Prod") { 
                       
                    echo "Building the docker Microservicio Payments Prod"
                    sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms-jar} -t 127.0.0.1:5000/payments-service:${branchName} ${Ec2_WORKSPACE}'"

                }
            }
        }

       /* stage("Deploy Microservicio") {
            steps {
                sh "${comandossh} 'docker run -d --name products-service-${branchName} -p 81:8080  127.0.0.1:5000/products-service:${branchName}'"
            }
        }*/
    }
}