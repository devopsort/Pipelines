pipeline {
    agent any
    stages {
        stage("Init") {
            steps {
                script {
                    load ("/tmp/variables.var")
                    comandossh = "ssh -i /tmp/Ec2-ssh-key.pem -oStrictHostKeyChecking=no ec2-user@JenkinsDockerTF sudo "
                    argocd_product_repo = "https://github.com/devopsort/argocd_products-service-example.git"
                    argocd_orders_repo = "https://github.com/devopsort/argocd_orders-service-example.git"
                    argocd_shipping_repo = "https://github.com/devopsort/argocd_shipping-service-example.git"
                    argocd_payments_repo = "https://github.com/devopsort/argocd_payments-service-example.git"
                    if("${GIT_BRANCH}" == "origin/Dev") {
                        branchName = "Dev"
                        IMAGEN_TAG = "dev"
                        version = "${BUILD_NUMBER}"
                    } 
                    if("${GIT_BRANCH}" == "origin/Test") { 
                       branchName = "Test"
                       IMAGEN_TAG = "test"
                       version = "${BUILD_NUMBER}"
                    } 
                    if("${GIT_BRANCH}" == "origin/Prod") { 
                       branchName = "Prod"
                       IMAGEN_TAG = "prod"
                       version = "${BUILD_NUMBER}"
                    }

                    //Estos datos no cambian entre los diferentes repos
                    registry = "473718918692.dkr.ecr.us-east-1.amazonaws.com"
                    login_registry = "aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 473718918692.dkr.ecr.us-east-1.amazonaws.com"

                    if("${GIT_URL}" == "https://github.com/devopsort/orders-service-example.git") { 
                       ms_jar = "orders-service-example.jar"
                       ms_name = "Orders"
                       ECR_NAME = "orders-service"
                       argocd_git = "argocd_orders-service-example"
                    }
                    if("${GIT_URL}" == "https://github.com/devopsort/products-service-example.git") { 
                       ms_jar = "products-service-example.jar"
                       ms_name = "Products"
                       ECR_NAME = "products-service"
                       argocd_git = "argocd_products-service-example"
                    }
                    if("${GIT_URL}" == "https://github.com/devopsort/shipping-service-example.git") { 
                       ms_jar = "shipping-service-example.jar"
                       ms_name = "Shipping"
                       ECR_NAME = "shipping-service"
                       argocd_git = "argocd_shipping-service-example"
                    }
                    if("${GIT_URL}" == "https://github.com/devopsort/payments-service-example.git") { 
                       ms_jar = "payments-service-example.jar"
                       ms_name = "Payments"
                       ECR_NAME = "payments-service"
                       argocd_git = "argocd_payments-service-example"
                    }
                    
                    repoUrl = "${GIT_URL}"
                    Ec2_WORKSPACE = "/home/jenkins_home/workspace"
                    clonerepo = "${Ec2_WORKSPACE}/${ms_name}"
                }
            }
        }

        stage('CloneRepo') {
            steps {
                script {
                    file = fileExists "/var/jenkins_home/workspace/${ms_name}"
                    if("${file}" == "true") {
                        sh "${comandossh} rm -rf ${clonerepo}" 
                    }
                    echo 'Pulling...' + branchName
                    sh "${comandossh} mkdir ${clonerepo}"
                    sh "${comandossh} git clone -b ${branchName} ${repoUrl} ${clonerepo}"
                }
            }
        }

        stage("Build") {
            steps {
                script {

                        echo "Building the docker Microservicio ${ms_name} ${branchName}"
                        sh "${comandossh} '${login_registry}'"
                        sh "${comandossh} 'docker build --build-arg JAR_FILE=${ms_jar} -t ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG} ${clonerepo}/' "
                        
                        echo "Building completed ....."
                        
                        echo "Pushing the docker images ...."
                        sh "${comandossh} 'docker push ${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}'"
                }
            }
        }

        stage("Deploy Microservicio") {
            steps {
                script {

                    echo 'Pulling Repo ArgoCD...' + branchName
                    sh "${comandossh} bash /home/ec2-user/script_deploy.sh \"github.com/devopsort\" \"${argocd_git}\" \"${branchName}\" \"${registry}/${ECR_NAME}:${version}_${IMAGEN_TAG}\" \"Instalar_version_${BUILD_NUMBER}\" \"devopsort\""
                }
            }
        }
    }
}
