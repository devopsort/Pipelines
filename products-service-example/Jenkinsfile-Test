pipeline {
    agent any
    stages {
        stage("Init") {
            steps {
                script {
                    comandossh = "ssh ec2-user@172.31.25.112 "
                    branchName = env.BRANCH_NAME
                    gitCredentials = "products-git"
                    repoUrl = "https://github.com/devopsort/products-service-example.git"
                    clonerepo = "/var/jenkins_home/workspace/products-service-example/products"
                    //test = load load ("/var/jenkins_home/workspace/products-service-example_Test/products-service-example/script.groovy")
                }
            }
        }

        stage('CloneRepo') {
            steps {
                echo 'Pulling...' + branchName
                sh "rm -rf ${clonerepo}"
                sh "git clone -b ${branchName} ${repoUrl} ${clonerepo}"
                //git branch: "${branchName}", credentialsId: "${gitCredentials}", url: "${repoUrl}"
            
            }
        }

        stage("Build") {
            steps {
                echo "-------------------------------------------------------------------"
                sh "${comandossh} 'cd ${clonerepo}; sudo docker build --build-arg JAR_FILE=products-service-example.jar -t 127.0.0.1:5000/products-service:${branchName}'"
            }
        }

        stage("Deploy in Test env") {
            steps {
                sh "${comandossh} 'docker run -d --name products-service-${branchName} -p 81:8080  127.0.0.1:5000/products-service:${branchName}'"
            }
        }
    }
}