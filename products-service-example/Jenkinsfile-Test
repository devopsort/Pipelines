def test

pipeline {
    agent any
    /*parameters {
        choice(name: 'VERSION', choices: ['1.1.0', '1.2.0', '1.3.0'], description: '')
        //booleanParam(name: 'executeTests', defaultValue: true, description: '')
    }*/
    stages {
        stage("init") {
            steps {
                script {
                    def comandossh = "ssh -i /var/jenkins_home/keyssh-devops-curso.pem ec2-user@JenkinsDockerTF sudo "
                    def branchName = env.BRANCH_NAME
                    def gitCredentials = "CREDENTIAL_ID"
                    def repoUrl = "https://github.com/devopsort/products-service-example.git"
                    test = load load ("/var/jenkins_home/workspace/products-service-example_Test/products-service-example/script.groovy")
                }
            }
        }
        stage('CloneRepo') {
            steps {
                echo "-------------------------------------------------------------------"
                sh "${comandossh} ' rm -rf *.zip'"
                sh "${comandossh} ' wget ${RepoURL}${params.Enviromnment}.zip'"
                sh "${comandossh} ' unzip -o ${params.Enviromnment}.zip'"
            }
        }
        /*stage ("Checkout") {
            checkout scm

        }*/
        stage("Build") {
            steps {
                sh test.buildAppTEST()
            }
        }
        /*stage("test") {
            when {
                expression {
                    params.executeTests
                }
            }
            steps {
                script {
                    test.testApp()
                }
            }
        }*/
        stage("Deploy in Test env") {
            steps {
                sh test.deployAppTEST()
            }
        }
    }
}